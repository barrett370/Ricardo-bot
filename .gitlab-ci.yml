
image:
  name: hashicorp/terraform:latest
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - mkdir -p ./creds
  - touch ./creds/cloudKeys.json
  - ls ./creds
  - echo $googleCloudCreds | base64 -d > ./creds/cloudKeys.json
  - export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/creds/cloudKeys.json"
  - cd ./terraform
  - terraform init

stages:
  - validate
  - plan
  - apply
  - build

build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

tf-build:
  stage: validate
  script:
    - terraform validate

tf-plan:
  stage: plan
  script:
    - cat $(echo $GOOGLE_APPLICATION_CREDENTIALS)
    - terraform plan -out "planfile"
  dependencies:
    - tf-build
  artifacts:
    paths:
      - planfile

tf-apply:
  image: hashicorp/terraform:latest
  stage: apply
  script:
    - terraform apply -input=false "planfile"
  dependencies:
    - tf-plan
  when: manual