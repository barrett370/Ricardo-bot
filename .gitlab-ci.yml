image: docker:latest
services:
  - docker:dind
# This file is a template, and might need editing before it works on your project.
stages:
  - build
  - plan
  - apply
build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

tf-plan:
  stage: plan
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd ./terraform
    - echo $googleCloudCreds | base64 -d > cloudKeys.json
    - export GOOGLE_APPLICATION_CREDENTIALS="cloudKeys.json"
    - docker run --rm --workdir /dir -v $PWD:/dir hashicorp/terraform:latest init 
    - docker run --rm --workdir /dir -v $PWD:/dir hashicorp/terraform:latest plan

#    - terraform init
#    - terraform plan

tf-apply-master:
  image: hashicorp/terraform:latest
  stage: apply
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo $googleCloudCreds | base64 -d > /tmp/cloudKeys.json
    - export GOOGLE_APPLICATION_CREDENTIALS="/tmp/cloudKeys.json"
    - cd ./terraform
    - terraform init
    - terraform apply --auto-approve
  only:
    - master